<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on hexablog</title>
    <link>/posts/</link>
    <description>Recent content in Posts on hexablog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Feb 2023 21:21:10 +0900</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Useful Websites for Developers</title>
      <link>/posts/usefulwebsites/</link>
      <pubDate>Thu, 23 Feb 2023 21:21:10 +0900</pubDate>
      
      <guid>/posts/usefulwebsites/</guid>
      <description>I made a list of useful websites for developers
Exploding Topics Find topics that are exploding around the world https://explodingtopics.com/
Canva Design anything easily https://canva.com/
Hubspot Tools A tool that does a lot of cool stuff https://www.hubspot.com/blog-topic-generator
Ubersuggest Keyword ideas https://app.neilpatel.com/en/ubersuggest/keyword_ideas
Random Wikipedia Page This endpoint redirects to a random Wikipedia page https://en.wikipedia.org/wiki/Special:Random
Pexels Pexels has nice stock photos https://www.pexels.com/</description>
    </item>
    
    <item>
      <title>RSA Cheatsheet</title>
      <link>/posts/rsacheatsheet/</link>
      <pubDate>Tue, 20 Dec 2022 03:22:24 -0800</pubDate>
      
      <guid>/posts/rsacheatsheet/</guid>
      <description>I made a RSA cheatsheet so I don&amp;rsquo;t have to search up about it every time.
To generate a private key openssl genrsa 2024 &amp;gt; secret.key To generate a public key openssl rsa -pubout &amp;lt; secret.key &amp;gt; public.key To encrypt a plaintext openssl pkeyutl -encrypt -pubin -inkey public.key -in plaintext -out ciphertext To decrypt a ciphertext openssl pkeyutl -decrypt -inkey secret.key -in ciphertext -out plaintext </description>
    </item>
    
    <item>
      <title>SQL injecion prevention with Python</title>
      <link>/posts/sqlinjection/</link>
      <pubDate>Sat, 17 Dec 2022 17:15:18 +0900</pubDate>
      
      <guid>/posts/sqlinjection/</guid>
      <description>Your Python SQL cursor execute code might be vulnerable to SQL injections! Here&amp;rsquo;s how to prevent it.
My experience I had a script that used a SQL database and I recently found out that the code was vulnerable to SQL injections. I quickly fixed the script after that, though.
The problem I had a script that had something like this:
domain = input() harmless, malicious = search(domain) con = pymysql.connect( db=&amp;#39;db&amp;#39;, user=&amp;#39;user&amp;#39;, passwd=&amp;#39;passwd&amp;#39;, host=&amp;#39;localhost&amp;#39; ) try: with con.</description>
    </item>
    
    <item>
      <title>NO_PUBKEY when running sudo apt-get update</title>
      <link>/posts/nopubkey/</link>
      <pubDate>Fri, 16 Dec 2022 16:21:26 +0900</pubDate>
      
      <guid>/posts/nopubkey/</guid>
      <description>I&amp;rsquo;ve tried a lot of solutions on the internet, but none of them worked for me. So I&amp;rsquo;m writing this post to help others who are having the same problem. Btw, this is my first post!
What did I do? I wanted to update my Ubuntu 18.04 droplet on DigitalOcean, so I ran sudo apt-get update and the result I got was:
root@ubuntu:~# sudo apt-get update Hit:1 https://repos.insights.digitalocean.com/apt/do-agent main InRelease Get:2 http://mirrors.</description>
    </item>
    
  </channel>
</rss>
